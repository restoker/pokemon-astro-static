---
import type { GetStaticPaths } from "astro";
import Card from "@/components/Card.astro";
import Layout from "@/layouts/Layout.astro";
import type { PokemonListResponse } from "@/interfaces/pokemon/response";

export const getStaticPaths = (async ({ paginate }) => {
	const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
	const data = (await resp.json()) as PokemonListResponse;

	const pokemons = data.results;

	return paginate(pokemons, { pageSize: 20 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const pokemons = page.data;
---

<Layout title="Home">
	<h1 class="font-bold text-4xl text-teal-600 my-10">Lista de pok√©mones</h1>
	<ul
		role="list"
		class="grid grid-cols-2 gap-x-4 gap-y-8 sm:grid-cols-3 sm:gap-x-6 lg:grid-cols-5 xl:gap-x-8 py-10"
	>
		{
			pokemons.map((pokemon) => (
				<Card name={pokemon.name} url={pokemon.url} />
			))
		}
	</ul>
	<nav
		class="flex items-center justify-between border-t border-gray-200/20 px-4 sm:px-0"
	>
		<div class="-mt-px flex w-0 flex-1">
			{
				page.currentPage === 1 ? null : (
					<a
						href={`${page.url.prev}`}
						class={`inline-flex items-center border-t-2 border-transparent pr-1 pt-4 text-sm font-medium text-gray-500  ${page.currentPage === 1 ? "disabled cursor-not-allowed" : "hover:border-gray-300 hover:text-gray-700"}`}
					>
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							class="size-6 mr-3 text-gray-400"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M6.75 15.75 3 12m0 0 3.75-3.75M3 12h18"
							/>
						</svg>
						Previous
					</a>
				)
			}
		</div>
		<div class="hidden md:-mt-px md:flex">
			{
				/* Current: "border-indigo-500 text-indigo-600", Default: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300" */
			}
			<a
				href="#"
				aria-current="page"
				class="inline-flex items-center border-t-2 border-indigo-500 px-4 pt-4 text-sm font-medium text-indigo-600"
			>
				{page.currentPage}
			</a>
		</div>
		<div class="-mt-px flex w-0 flex-1 justify-end">
			{
				page.currentPage === page.lastPage ? null : (
					<a
						href={`${page.url.next}`}
						class="inline-flex items-center border-t-2 border-transparent pl-1 pt-4 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
						onclick={`${page.currentPage === page.lastPage} ? return false : return true`}
					>
						Next
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							class="size-6 ml-3 text-gray-400"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M17.25 8.25 21 12m0 0-3.75 3.75M21 12H3"
							/>
						</svg>
					</a>
				)
			}
		</div>
	</nav>
</Layout>

<style>
	.disable {
		@apply cursor-none;
	}
</style>
